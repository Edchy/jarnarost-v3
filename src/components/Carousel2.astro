---
import CoffeePopover from "./CoffeePopover.astro";
import CoffeePopover2 from "./CoffeePopover2.astro";
import SpaceParticles from "./SpaceParticles.astro";
interface Props {
  bgHeadingColor?: string;
  headingColor?: string;
  spanColor?: string;
  split?: boolean;
}

const {
  split = false,
  bgHeadingColor,
  headingColor,
  spanColor = "var(--color-1)",
} = Astro.props;

const solidOrNot = bgHeadingColor
  ? bgHeadingColor
  : `oklch(from var(--color-light) .9 c h / .2)`;
---

<div class="scroller" data-direction="right" data-speed="fast">
  {split && <SpaceParticles />}
  <div class="scroller__inner">
    <!-- IMG 1 -->
    <button popovertarget="popover1" class="img-container">
      <CoffeePopover
        title="BRYGG"
        id="popover1"
        imageSrc="/images/coffee/brygg.avif"
        bg="url('/images/coffee/brygglabels.avif')"
        bgColor="var(--color-3)"
        blendMode="color-burn"
      />
      <h2 aria-label="Brygg">
        BRY<span class="lowercase">gg</span><span class="dot">.</span>
      </h2>
      <img src="/images/coffee/brygg.avif" alt="bag of coffebeans" />
    </button>

    <!-- IMG 2 -->
    <button popovertarget="popover2" class="img-container">
      <CoffeePopover
        title="ESP"
        id="popover2"
        imageSrc="/images/coffee/esp.avif"
        bg="url('/images/coffee/esplabels.avif')"
        bgColor="var(--color-4-dark)"
        blendMode="color-burn"
      />
      <h2 aria-label="Espresso">
        ESP<span class="lowercase">resso</span><span class="dot">.</span>
      </h2>
      <img src="/images/coffee/esp.avif" alt="bag of coffebeans" />
    </button>

    <!-- IMG 3 -->
    <button popovertarget="popover3" class="img-container">
      <CoffeePopover
        title="MELLAN"
        id="popover3"
        imageSrc="/images/coffee/mellan.avif"
        bg="url('/images/decorations/mugz.avif')"
        bgColor="var(--color-8)"
        blendMode="color-dodge"
      />
      <h2 aria-label="Brygg">
        BRY<span class="lowercase">gg</span><span class="dot">.</span>
      </h2>
      <img src="/images/coffee/mellan.avif" alt="bag of coffebeans" />
    </button>

    <!-- IMG 4 -->
    <button popovertarget="popover4" class="img-container">
      <CoffeePopover
        title="GRANDE"
        id="popover4"
        imageSrc="/images/coffee/espgrande.avif"
      />
      <h2 aria-label="Espresso">
        ESP<span class="lowercase">resso</span><span class="dot">.</span>
      </h2>
      <img src="/images/coffee/espgrande.avif" alt="bag of coffebeans" />
    </button>
  </div>
  <h3>DEMETER</h3>
  <!-- <h3>JÃ„RNA ROSTERI</h3> -->
</div>

<style define:vars={{ solidOrNot, headingColor, spanColor }}>
  button {
    background: none;
    border: none;
    cursor: pointer;
  }

  .img-container {
    display: flex;
    align-items: center;
  }

  .dot {
    font-family: system-ui;
  }

  .scroller {
    display: flex;
    align-items: center;
    max-width: 100vw;
    height: 30vh;
    overflow-x: clip;

    position: relative;
    /* overflow-y: hidden;
    -webkit-mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    );
    mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    ); */
  }
  .scroller > * {
    flex: 1;
  }

  .scroller__inner {
    display: flex;
    align-items: center;
    position: absolute;
    left: 0;
    will-change: transform;
  }

  .scroller[data-animated="true"] .scroller__inner {
    width: max-content;
    flex-wrap: nowrap;
    animation: scroll var(--_animation-duration, 15s)
      var(--_animation-direction, forwards) linear infinite;
  }

  .scroller[data-animated="true"] .scroller__inner:hover {
    animation-play-state: paused;
  }

  .scroller[data-direction="right"] {
    --_animation-direction: reverse;
  }

  .scroller[data-direction="left"] {
    --_animation-direction: forwards;
  }

  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  h2 {
    font-size: 6rem;
    white-space: nowrap;
    /* color: var(--color-brand-2); */
    color: var(--headingColor);
    /* animation: hueRotate 10s infinite; */
    /* padding-right: 2rem;
    padding-left: 1rem; */
    /* font-family: "Nacho"; */
    /* margin-inline: -5rem; */
  }
  span {
    color: var(--spanColor);
    font-family: var(--font-secondary-heading);
    font-size: 3rem;
    /* animation: hueRotate 10s infinite; */
  }
  h3 {
    font-size: 6rem;
    /* animation: hueRotate 10s infinite; */

    color: var(--solidOrNot);
    text-align: center;
    margin: 0 auto;
  }
  @media (min-width: 700px) {
    h2 {
      font-size: 20rem;
    }
    h3 {
      font-size: 20rem;
    }
    span {
      font-size: 6rem;
    }
  }

  .scroller__inner img {
    width: 400px;
    aspect-ratio: 1;
    /* height: 100px; */
    object-fit: contain;
    transform: rotate(65deg);
    transition: transform 0.3s ease;
    z-index: 999;
  }

  .scroller__inner img:hover {
    transform: rotate(100deg) scale(1.5);
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const scroller = document.querySelector<HTMLElement>(".scroller");

    if (!window.matchMedia("(prefers-reduced-motion: reduce)").matches) {
      addAnimation();
    }

    function addAnimation() {
      // Ensure scrollers are not null
      if (!scroller) return;

      scroller.setAttribute("data-animated", "true");

      const scrollerInner =
        scroller.querySelector<HTMLElement>(".scroller__inner");

      if (!scrollerInner) return; // Ensure scrollerInner is not null

      const scrollerContent = Array.from(scrollerInner.children);

      scrollerContent.forEach((item) => {
        const duplicatedItem = item.cloneNode(true) as HTMLElement;
        duplicatedItem.setAttribute("aria-hidden", "true");
        scrollerInner.appendChild(duplicatedItem);
      });
    }
  });
</script>
