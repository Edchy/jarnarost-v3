---
import { Image } from "astro:assets";

interface Props {
  body: string;
  id: string;
  href?: string;
  imageSrc: string;
  hoverBg: string;
  color?: string;
}

const { body, id, href, imageSrc, hoverBg, color } = Astro.props;
const alt =
  "This is a randomly generated image from JÃ¤rna Rosteri's image library. This library contains decorative images showing images from the local town, coffeebeans and bags, people, places, flavors, etc.";
---

<li tabindex="0" data-id={id} class:list={[id, "card-link"]}>
  <div>
    <Image width={100} height={100} src={imageSrc} alt={alt} />
    <!-- <img src={imageSrc} alt={alt} /> -->
    {
      href !== "#" ? (
        <a href={href} class="x">
          <h2>{body}</h2>
          {!body && (
            <div>
              <img class="logo" src="/images/logos/logo.avif" />
            </div>
          )}
        </a>
      ) : (
        <div class="x">
          {body && <h2>{body}</h2>}
          {body === "kontakt" && (
            <address>
              <a href="mailto:info@jarnarosteri.se">info</a>
              <a href="mailto:order@jarnarosteri.se">order</a>
              <a href="mailto:ekonomi@jarnarosteri.se">ekonomi</a>
              <a href="tel:0708401365">070-840 13 65</a>
            </address>
          )}
          {!body && (
            <div>
              <img
                class="logo"
                src="/images/logos/logo.avif"
                alt="company logo"
              />
            </div>
          )}
        </div>
      )
    }
  </div>
</li>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const listItems = document.querySelectorAll(".card-links li");

    listItems.forEach((li) => {
      li.addEventListener("touchstart", () => {
        li.classList.add("active");
      });

      li.addEventListener("touchend", () => {
        setTimeout(() => {
          li.classList.remove("active");
        }, 300); // Adjust the timeout as needed
      });
    });
  });
</script>
<style define:vars={{ hoverBg, color }}>
  address {
    padding-top: 2rem;
    font-family: var(--font-primary-heading);
    font-size: var(--step-1);
    width: 100%;
    text-align: center;
    display: grid;
    grid-template-columns: 1fr;
    text-transform: uppercase;
    font-style: normal;
    font-weight: bold;
    & a {
      font-family: var(--font-copy);

      &:hover {
        color: oklch(from var(--hoverBg) calc(1 - 0.4) c h);
      }
    }
  }
  .logo {
    width: max(280px, 22vw);
    padding-left: 10px;
  }

  li {
    color: var(--color);
    overflow: clip;
  }

  li:focus-within img:not(.logo),
  li:hover img:not(.logo),
  li:active img:not(.logo) {
    opacity: 0;
  }

  li:focus-within .x,
  li:hover .x,
  li:active .x {
    opacity: 1;
    /* cursor: url(https://cur.cursors-4u.net/food/foo-7/foo643.cur), auto; */
    /* cursor: crosshair; */
  }

  li div {
    background-color: var(--hoverBg);
    position: relative;
    height: 100%;
    z-index: 22;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  img:not(.logo) {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .x {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    opacity: 0;
    z-index: 10;
  }
  a:is(:any-link, :visited, :active) {
    color: currentColor;
    text-decoration: none;
  }

  h2 {
    font-family: var(--font-primary-heading);
    text-align: center;
    font-size: var(--step-3);
    line-height: 1;
    word-spacing: 100vw;
    transition: color 0.2s ease;
    &:hover {
      color: oklch(from var(--hoverBg) calc(1 - 0.4) c h);
    }
  }
</style>
